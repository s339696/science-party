# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#Home page
GET     /                               controllers.Application.renderHome()

# Public Area
GET     /login                          controllers.Public.renderLoginPage()
POST    /login                          controllers.Public.handleLoginRequest()
POST    /register                       controllers.Public.handleRegisterRequest()
GET     /news                           controllers.Public.renderNews()
GET     /register                       controllers.Public.renderRegister()
GET     /blog                           controllers.Public.renderBlog()
GET     /events                         controllers.Public.renderEvents()
GET     /kontakt                        controllers.Public.renderKontakt()

#Profil
GET     /profile                        controllers.Profil.renderOwnProfile()
GET     /profile/delete                 controllers.Profil.handleProfileDelete(confirmed: Boolean ?= false)
POST    /profile/update                 controllers.Profil.handleProfileUpdate()
GET     /profile/scan                   controllers.Profil.renderScanQr()
GET     /profile/scan/:qr               controllers.Profil.handleScanQr(qr: String)
GET     /profile/:id                    controllers.Profil.renderProfile(id: Long)
GET     /logout                         controllers.Profil.handleLogout()

#Gameplay
GET     /games                          controllers.Games.renderGames()
GET     /games/pending                  controllers.Games.renderPendingGames()
GET     /games/load                     controllers.Games.renderRunningGames()
GET     /games/play/:id                 controllers.Games.renderGame(id: Long)
GET     /games/create                   controllers.Games.renderCreateGame()
POST    /games/create                   controllers.Games.createGame()
GET     /games/delete/:id               controllers.Games.deleteGame(id: Long)
GET     /games/accept/:id               controllers.Games.respondGameInv(id: Long, action: Integer = 1)
GET     /games/decline/:id              controllers.Games.respondGameInv(id: Long, action: Integer = 0)
GET     /games/leave/:id                controllers.Games.leaveGame(id: Long)
POST    /games/answer/:id               controllers.Games.handleAnswer(id: Long)

#Friends
GET     /friends                        controllers.Friends.renderFriends(feedback: String = "")
GET     /friends/add/:id                controllers.Friends.addFriend(id: Long)
GET     /friends/delete/:id             controllers.Friends.deleteFriend(id: Long)
GET     /friends/accept/:id             controllers.Friends.responseFriendRequest(id: Long, action: Integer = 1)
GET     /friends/decline/:id            controllers.Friends.responseFriendRequest(id: Long, action: Integer = 0)

#Messages
GET     /messages                       controllers.Messages.renderMessages()
GET     /messages/new                   controllers.Messages.renderNewMessage()
POST    /messages/new                   controllers.Messages.handleNewMessage()
GET     /messages/leave/:chatId         controllers.Messages.handleLeaveChat(chatId: Long)
GET     /messages/show/:chatId          controllers.Messages.renderShowChat(chatId: Long)
POST    /messages/send/:chatId          controllers.Messages.handleSendMessage(chatId: Long)


# Ranking
GET     /ranking                        controllers.Ranking.renderRanking()

# Playground -> Let's play a bit
GET     /playground                     controllers.Application.playground()

#AutorConnect
#AC-User
GET    /ac/get/user/list                controllers.AuthorConnect.serveUserList()
GET    /ac/get/user/:id                 controllers.AuthorConnect.serveUser(id: Long)
POST   /ac/update/user                  controllers.AuthorConnect.handleUserUpdate()
PUT    /ac/insert/user                  controllers.AuthorConnect.handleUserInsert()
DELETE /ac/delete/user/:id              controllers.AuthorConnect.handleUserDelete(id: Long)
#AC-Topic
GET    /ac/get/topic/list               controllers.AuthorConnect.serveTopicList()
GET    /ac/get/topic/:id                controllers.AuthorConnect.serveTopic(id: Long)
POST   /ac/update/topic                 controllers.AuthorConnect.handleTopicUpdate()
PUT    /ac/insert/topic                 controllers.AuthorConnect.handleTopicInsert()
DELETE /ac/delete/topic/:id             controllers.AuthorConnect.handleTopicDelete(id: Long)
#AC-Question
GET    /ac/get/question/list/:tid       controllers.AuthorConnect.serveQuestionList(tid: Long)
GET    /ac/get/question/:id             controllers.AuthorConnect.serveQuestion(id: Long)
POST   /ac/update/question              controllers.AuthorConnect.handleQuestionUpdate()
PUT    /ac/insert/question              controllers.AuthorConnect.handleQuestionInsert()
DELETE /ac/delete/question/:id          controllers.AuthorConnect.handleQuestionDelete(id: Long)
#AC-Answer
GET    /ac/get/answer/list/:qid         controllers.AuthorConnect.serveAnswerList(qid: Long)
GET    /ac/get/answer/:id               controllers.AuthorConnect.serveAnswer(id: Long)
POST   /ac/update/answer                controllers.AuthorConnect.handleAnswerUpdate()
PUT    /ac/insert/answer                controllers.AuthorConnect.handleAnswerInsert()
DELETE /ac/delete/answer/:id            controllers.AuthorConnect.handleAnswerDelete(id: Long)

# Map static resources from the /publ folder to the /assets URL path
GET     /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)
